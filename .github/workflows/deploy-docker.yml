name: Deploy Docker image

on:
  workflow_dispatch:
#  push:
#    branches: [main]

jobs:
  test:
    name: Run package tests
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.23.x
        uses: actions/setup-go@v2
        with:
          go-version: ^1.23
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Copy config.yaml file to cmd/server
        run: |
          sed -i 's/blacklist: false/blacklist: true/g' config.example.yaml
          cp config.example.yaml cmd/server/config.yaml

      - name: Install swaggo/swag
        run: |
          go install github.com/swaggo/swag/cmd/swag@latest
          swag init -g server.go -d "cmd/server,edupage,icanteen" --pd --parseInternal

      - name: Test packages
        run: go test -v -coverpkg=./... ./... -server="${{ secrets.SERVER }}" -username="${{ secrets.USERNAME }}" -password="${{ secrets.PASSWORD }}" -name="${{ secrets.NAME }}" -ic_server="${{ secrets.IC_SERVER }}" -ic_username="${{ secrets.IC_USERNAME }}" -ic_password="${{ secrets.IC_PASSWORD }}" -race -coverprofile=coverage.out -covermode=atomic

  update-web-app:
    name: Update web app
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          persist-credentials: true

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Clone EduPage2 repo
        run: |
          git clone https://github.com/DislikesSchool/EduPage2.git eduapp2

      - name: Get latest tag from EduPage2 repo
        id: get_tag
        run: |
          tag_json=$(curl -s https://api.github.com/repos/DislikesSchool/EduPage2/tags)
          latest_tag=$(echo "$tag_json" | jq -r '.[0].name')
          echo "Latest tag: $latest_tag"
          echo "latest_tag=$latest_tag" >> $GITHUB_OUTPUT

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: "stable"
          cache: true

      - name: Build EduPage2 web release
        working-directory: ./eduapp2
        run: |
          flutter pub get
          flutter gen-l10n
          flutter build web --release --dart-define=BVS="Release ${{ steps.get_tag.outputs.latest_tag }} Web"

      - name: Upload web app files
        uses: actions/upload-artifact@v4
        with:
          name: web-app
          path: eduapp2/build/web

  build-and-deploy:
    name: Build and deploy Docker image
    runs-on: ubuntu-latest
    needs: [test, update-web-app]
    steps:
      - uses: actions/checkout@v4
      - name: Download web app files
        uses: actions/download-artifact@v4
        with:
          name: web-app
          path: ./cmd/server/web
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: vypal
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: vypal/edupage2-server:latest
