// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/classroom/{id}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Returns the classroom by ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DBI"
                ],
                "summary": "Get the classroom by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Classroom ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Classroom"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/apimodel.UnauthorizedResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/apimodel.InternalErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/grades": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Returns the user's grades.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "grades"
                ],
                "summary": "Get the user's grades",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Year",
                        "name": "year",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Half",
                        "name": "half",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Results"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/apimodel.UnauthorizedResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/apimodel.InternalErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/message": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Sends a message to a recipient.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "messages"
                ],
                "summary": "Send a message",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Message",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/apimodel.SendMessageRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/apimodel.UnauthorizedResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/apimodel.InternalErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/periods": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Returns the school's periods.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DBI"
                ],
                "summary": "Get the school's periods",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "$ref": "#/definitions/model.Period"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/apimodel.UnauthorizedResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/apimodel.InternalErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/recipients": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Returns the possible recipients for messages.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "messages"
                ],
                "summary": "Get recipients",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/apimodel.Recipient"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/apimodel.UnauthorizedResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/apimodel.InternalErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/subject/{id}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Returns the subject by ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DBI"
                ],
                "summary": "Get the subject by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Subject ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Subject"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/apimodel.UnauthorizedResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/apimodel.InternalErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/teacher/{id}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Returns the teacher by ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DBI"
                ],
                "summary": "Get the teacher by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Teacher ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Teacher"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/apimodel.UnauthorizedResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/apimodel.InternalErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/timeline": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Returns the user's timeline from any date to any other date or today.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "timeline"
                ],
                "summary": "Get the user's timeline",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "2022-01-01T00:00:00Z",
                        "name": "from",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "time.Now()",
                        "example": "2022-01-01T00:00:00Z",
                        "name": "to",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/apimodel.Timeline"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/apimodel.UnauthorizedResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/apimodel.InternalErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/timeline/recent": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Returns the user's timeline from today to 30 days in the past.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "timeline"
                ],
                "summary": "Get the user's recent timeline",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/apimodel.Timeline"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/apimodel.UnauthorizedResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/apimodel.InternalErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/timelineitem/{id}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Returns the timeline item by ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "timeline"
                ],
                "summary": "Get the timeline item by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Timeline item ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/apimodel.TimelineItemWithOrigin"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/apimodel.UnauthorizedResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/apimodel.InternalErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/timetable": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Returns the user's timetable from date specified to date specified or today.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "timetable"
                ],
                "summary": "Get the user's  timetable",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "2022-01-01T00:00:00Z",
                        "name": "from",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "time.Now()",
                        "example": "2022-01-01T00:00:00Z",
                        "name": "to",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/apimodel.CompleteTimetable"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/apimodel.UnauthorizedResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/apimodel.InternalErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/timetable/recent": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Returns the user's timetable from before yesterday to 7 days in the future.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "timetable"
                ],
                "summary": "Get the user's recent timetable",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/apimodel.CompleteTimetable"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/apimodel.UnauthorizedResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/apimodel.InternalErrorResponse"
                        }
                    }
                }
            }
        },
        "/icanteen": {
            "post": {
                "description": "Loads the lunches from iCanteen for the next month.",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "lunches"
                ],
                "summary": "Load lunches from iCanteen",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Username",
                        "name": "username",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Password",
                        "name": "password",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Server",
                        "name": "server",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/icanteen.ICanteenDay"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/apimodel.ICanteenBadRequestResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/apimodel.ICanteenInternalErrorResponse"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "Logs in to your Edupage account using the provided credentials.",
                "consumes": [
                    "multipart/form-data",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Login to your Edupage account",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Username",
                        "name": "username",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Password",
                        "name": "password",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Server",
                        "name": "server",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/apimodel.LoginSuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/apimodel.LoginBadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/apimodel.LoginUnauthorizedResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/apimodel.LoginInternalErrorResponse"
                        }
                    }
                }
            }
        },
        "/qrlogin": {
            "get": {
                "description": "Logs in using a QR code. This route uses Server-Sent Events (SSE).",
                "tags": [
                    "auth"
                ],
                "summary": "Log in using a QR code",
                "responses": {}
            }
        },
        "/qrlogin/:code": {
            "post": {
                "description": "Finishes QR login by sending the login data to the client that initiated the SSE channel.",
                "tags": [
                    "auth"
                ],
                "summary": "Finish QR login",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Code",
                        "name": "code",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Username",
                        "name": "username",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Password",
                        "name": "password",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Endpoint",
                        "name": "endpoint",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Server",
                        "name": "server",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/validate-token": {
            "get": {
                "description": "Validates your token and returns a 200 OK if it's valid.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Validate your token",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT token",
                        "name": "token",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/apimodel.ValidateTokenSuccessResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/apimodel.ValidateTokenUnauthorizedResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "apimodel.CompleteTimetable": {
            "type": "object",
            "properties": {
                "days": {
                    "description": "key format is YYYY-MM-dd or 2006-01-02",
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "$ref": "#/definitions/apimodel.CompleteTimetableItem"
                        }
                    }
                }
            }
        },
        "apimodel.CompleteTimetableItem": {
            "type": "object",
            "properties": {
                "classes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Class"
                    }
                },
                "classrooms": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Classroom"
                    }
                },
                "colors": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "date": {
                    "type": "string"
                },
                "endtime": {
                    "type": "string"
                },
                "groupnames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "igroupid": {
                    "type": "string"
                },
                "starttime": {
                    "type": "string"
                },
                "studentids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "subject": {
                    "$ref": "#/definitions/model.Subject"
                },
                "teachers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Teacher"
                    }
                },
                "type": {
                    "type": "string"
                },
                "uniperiod": {
                    "type": "string"
                }
            }
        },
        "apimodel.HomeworkReduced": {
            "type": "object",
            "properties": {
                "attachements": {},
                "data": {
                    "$ref": "#/definitions/model.StringJsonObject"
                },
                "datecreated": {
                    "type": "string"
                },
                "details": {
                    "type": "string"
                },
                "homeworkid": {
                    "type": "string"
                },
                "hwkid": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "period": {},
                "pocet_done": {
                    "type": "integer"
                },
                "pocet_like": {
                    "type": "integer"
                },
                "pocet_reakcii": {
                    "type": "integer"
                },
                "posledny_vysledok": {
                    "type": "string"
                },
                "predmetid": {
                    "type": "integer"
                },
                "stav": {
                    "type": "string"
                },
                "stavhodnotetimelinePathd": {
                    "type": "string"
                },
                "students_hidden": {
                    "type": "string"
                },
                "testid": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "string"
                },
                "typ": {
                    "type": "string"
                },
                "userid": {
                    "type": "string"
                },
                "znamky_udalostid": {}
            }
        },
        "apimodel.ICanteenBadRequestResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "username is missing"
                }
            }
        },
        "apimodel.ICanteenInternalErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "failed to load lunches: failed to login: Post https://example.edupage.org/login/edubarLogin.php: dial tcp: lookup example.edupage.org: no such host"
                }
            }
        },
        "apimodel.InternalErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "failed to create payload"
                }
            }
        },
        "apimodel.LoginBadRequestResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "Username and Password are required"
                },
                "success": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "apimodel.LoginInternalErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "failed to login: Post https://example.edupage.org/login/edubarLogin.php: dial tcp: lookup example.edupage.org: no such host"
                },
                "success": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "apimodel.LoginSuccessResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": ""
                },
                "firstname": {
                    "type": "string",
                    "example": "John"
                },
                "lastname": {
                    "type": "string",
                    "example": "Doe"
                },
                "success": {
                    "type": "boolean",
                    "example": true
                },
                "token": {
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM"
                }
            }
        },
        "apimodel.LoginUnauthorizedResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "Unexpected response from server, make sure credentials are specified correctly"
                },
                "success": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "apimodel.Recipient": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "apimodel.SendMessageRequest": {
            "type": "object",
            "properties": {
                "message": {
                    "$ref": "#/definitions/edupage.MessageOptions"
                },
                "recipient": {
                    "type": "string"
                }
            }
        },
        "apimodel.Timeline": {
            "type": "object",
            "properties": {
                "homeworks": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/apimodel.HomeworkReduced"
                    }
                },
                "items": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/apimodel.TimelineItemReduced"
                    }
                }
            }
        },
        "apimodel.TimelineItemReduced": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/model.StringJsonObject"
                },
                "poct_reakcii": {
                    "type": "integer"
                },
                "reakcia_na": {
                    "type": "string"
                },
                "removed": {
                    "type": "integer"
                },
                "target_user": {
                    "type": "string"
                },
                "text": {
                    "type": "string"
                },
                "timelineid": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "string"
                },
                "typ": {
                    "type": "string"
                },
                "user": {
                    "type": "string"
                },
                "vlastnik": {
                    "type": "string"
                }
            }
        },
        "apimodel.TimelineItemWithOrigin": {
            "type": "object",
            "properties": {
                "cas_pridania": {
                    "type": "string"
                },
                "cas_pridania_btc": {
                    "type": "string"
                },
                "cas_udalosti": {
                    "type": "string"
                },
                "cas_udalosti_btc": {
                    "type": "string"
                },
                "data": {
                    "$ref": "#/definitions/model.StringJsonObject"
                },
                "ineid": {
                    "type": "string"
                },
                "origin_server": {
                    "type": "string"
                },
                "poct_reakcii": {
                    "type": "integer"
                },
                "pomocny_zaznam": {
                    "type": "string"
                },
                "posledna_reakcia": {
                    "type": "string"
                },
                "reakcia_na": {
                    "type": "string"
                },
                "removed": {},
                "replies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/apimodel.TimelineItemWithOrigin"
                    }
                },
                "target_user": {
                    "type": "string"
                },
                "text": {
                    "type": "string"
                },
                "timelineid": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "string"
                },
                "typ": {
                    "type": "string"
                },
                "user": {
                    "type": "string"
                },
                "user_meno": {
                    "type": "string"
                },
                "vlastnik": {
                    "type": "string"
                },
                "vlastnik_meno": {
                    "type": "string"
                }
            }
        },
        "apimodel.UnauthorizedResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "Unauthorized"
                }
            }
        },
        "apimodel.ValidateTokenSuccessResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": ""
                },
                "expires": {
                    "type": "string",
                    "example": "1620000000"
                },
                "success": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "apimodel.ValidateTokenUnauthorizedResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "Unauthorized"
                },
                "success": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "edupage.MessageOptions": {
            "type": "object",
            "properties": {
                "allowReplies": {
                    "type": "boolean"
                },
                "attachments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "important": {
                    "type": "boolean"
                },
                "parents": {
                    "type": "boolean"
                },
                "poll": {
                    "$ref": "#/definitions/edupage.PollOptions"
                },
                "repliesToAuthorOnly": {
                    "type": "boolean"
                },
                "text": {
                    "type": "string"
                }
            }
        },
        "edupage.PollOption": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "text": {
                    "type": "string"
                }
            }
        },
        "edupage.PollOptions": {
            "type": "object",
            "properties": {
                "multiple": {
                    "type": "boolean"
                },
                "options": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/edupage.PollOption"
                    }
                }
            }
        },
        "icanteen.ICanteenDay": {
            "type": "object",
            "properties": {
                "day": {
                    "type": "string"
                },
                "lunches": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/icanteen.ICanteenLunch"
                    }
                }
            }
        },
        "icanteen.ICanteenLunch": {
            "type": "object",
            "properties": {
                "can_order": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "ordered": {
                    "type": "boolean"
                }
            }
        },
        "model.Class": {
            "type": "object",
            "properties": {
                "classroomid": {
                    "type": "string"
                },
                "grade": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "short": {
                    "type": "string"
                },
                "teacher2id": {
                    "type": "string"
                },
                "teacherid": {
                    "type": "string"
                }
            }
        },
        "model.Classroom": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "short": {
                    "type": "string"
                }
            }
        },
        "model.Event": {
            "type": "object",
            "properties": {
                "TriedaID": {
                    "type": "string"
                },
                "data": {
                    "type": "string"
                },
                "datum": {
                    "type": "string"
                },
                "mesiac": {
                    "type": "string"
                },
                "moredata": {},
                "p_farba": {
                    "type": "string"
                },
                "p_meno": {
                    "type": "string"
                },
                "p_najskor_priemer": {
                    "type": "string"
                },
                "p_pocet_znamok": {},
                "p_typ_udalosti": {},
                "p_vaha": {},
                "planid": {
                    "type": "string"
                },
                "podpisane": {
                    "type": "string"
                },
                "podpisane_rodic": {
                    "type": "string"
                },
                "predmetid": {
                    "type": "string"
                },
                "priemer": {
                    "type": "string"
                },
                "provider": {
                    "type": "string"
                },
                "stav": {
                    "type": "string"
                },
                "studentid": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "string"
                },
                "ucitelid": {
                    "type": "string"
                },
                "udalostID": {
                    "type": "string"
                },
                "znamkaid": {
                    "type": "string"
                }
            }
        },
        "model.Note": {
            "type": "object",
            "properties": {
                "PredmetID": {
                    "type": "string"
                },
                "VcelickaID": {
                    "type": "string"
                },
                "p_datum": {
                    "type": "string"
                },
                "p_text": {
                    "type": "string"
                },
                "p_typ": {
                    "type": "string"
                }
            }
        },
        "model.Period": {
            "type": "object",
            "properties": {
                "endtime": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "short": {
                    "type": "string"
                },
                "starttime": {
                    "type": "string"
                }
            }
        },
        "model.Results": {
            "type": "object",
            "properties": {
                "events": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/model.Event"
                    }
                },
                "notes": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/model.Note"
                    }
                }
            }
        },
        "model.StringJsonObject": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "object",
                    "additionalProperties": true
                }
            }
        },
        "model.Subject": {
            "type": "object",
            "properties": {
                "cbhidden": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "short": {
                    "type": "string"
                }
            }
        },
        "model.Teacher": {
            "type": "object",
            "properties": {
                "classroomid": {
                    "type": "string"
                },
                "datefrom": {
                    "type": "string"
                },
                "dateto": {
                    "type": "string"
                },
                "firstname": {
                    "type": "string"
                },
                "gender": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "isout": {
                    "type": "boolean"
                },
                "lastname": {
                    "type": "string"
                },
                "short": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "EduPage2 API",
	Description:      "JWT authorization token",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
