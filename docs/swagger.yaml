basePath: /
definitions:
  apimodel.CompleteTimetable:
    properties:
      days:
        additionalProperties:
          items:
            $ref: '#/definitions/apimodel.CompleteTimetableItem'
          type: array
        description: key format is YYYY-MM-dd or 2006-01-02
        type: object
    type: object
  apimodel.CompleteTimetableItem:
    properties:
      classes:
        items:
          $ref: '#/definitions/model.Class'
        type: array
      classrooms:
        items:
          $ref: '#/definitions/model.Classroom'
        type: array
      colors:
        items:
          type: string
        type: array
      date:
        type: string
      endtime:
        type: string
      groupnames:
        items:
          type: string
        type: array
      igroupid:
        type: string
      starttime:
        type: string
      studentids:
        items:
          type: string
        type: array
      subject:
        $ref: '#/definitions/model.Subject'
      teachers:
        items:
          $ref: '#/definitions/model.Teacher'
        type: array
      type:
        type: string
      uniperiod:
        type: string
    type: object
  apimodel.HomeworkReduced:
    properties:
      attachements: {}
      data:
        $ref: '#/definitions/model.StringJsonObject'
      datecreated:
        type: string
      details:
        type: string
      homeworkid:
        type: string
      hwkid:
        type: string
      name:
        type: string
      period: {}
      pocet_done:
        type: integer
      pocet_like:
        type: integer
      pocet_reakcii:
        type: integer
      posledny_vysledok:
        type: string
      predmetid:
        type: integer
      stav:
        type: string
      stavhodnotetimelinePathd:
        type: string
      students_hidden:
        type: string
      testid:
        type: string
      timestamp:
        type: string
      typ:
        type: string
      userid:
        type: string
      znamky_udalostid: {}
    type: object
  apimodel.ICanteenBadRequestResponse:
    properties:
      error:
        example: username is missing
        type: string
    type: object
  apimodel.ICanteenInternalErrorResponse:
    properties:
      error:
        example: 'failed to load lunches: failed to login: Post https://example.edupage.org/login/edubarLogin.php:
          dial tcp: lookup example.edupage.org: no such host'
        type: string
    type: object
  apimodel.InternalErrorResponse:
    properties:
      error:
        example: failed to create payload
        type: string
    type: object
  apimodel.LoginBadRequestResponse:
    properties:
      error:
        example: Username and Password are required
        type: string
      success:
        example: false
        type: boolean
    type: object
  apimodel.LoginInternalErrorResponse:
    properties:
      error:
        example: 'failed to login: Post https://example.edupage.org/login/edubarLogin.php:
          dial tcp: lookup example.edupage.org: no such host'
        type: string
      success:
        example: false
        type: boolean
    type: object
  apimodel.LoginSuccessResponse:
    properties:
      error:
        example: ""
        type: string
      firstname:
        example: John
        type: string
      lastname:
        example: Doe
        type: string
      success:
        example: true
        type: boolean
      token:
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM
        type: string
    type: object
  apimodel.LoginUnauthorizedResponse:
    properties:
      error:
        example: Unexpected response from server, make sure credentials are specified
          correctly
        type: string
      success:
        example: false
        type: boolean
    type: object
  apimodel.Recipient:
    properties:
      id:
        type: string
      name:
        type: string
      type:
        type: string
    type: object
  apimodel.SendMessageRequest:
    properties:
      message:
        $ref: '#/definitions/edupage.MessageOptions'
      recipient:
        type: string
    type: object
  apimodel.Timeline:
    properties:
      homeworks:
        additionalProperties:
          $ref: '#/definitions/apimodel.HomeworkReduced'
        type: object
      items:
        additionalProperties:
          $ref: '#/definitions/apimodel.TimelineItemReduced'
        type: object
    type: object
  apimodel.TimelineItemReduced:
    properties:
      data:
        $ref: '#/definitions/model.StringJsonObject'
      poct_reakcii:
        type: integer
      reakcia_na:
        type: string
      removed:
        type: integer
      target_user:
        type: string
      text:
        type: string
      timelineid:
        type: string
      timestamp:
        type: string
      typ:
        type: string
      user:
        type: string
      vlastnik:
        type: string
    type: object
  apimodel.TimelineItemWithOrigin:
    properties:
      cas_pridania:
        type: string
      cas_pridania_btc:
        type: string
      cas_udalosti:
        type: string
      cas_udalosti_btc:
        type: string
      data:
        $ref: '#/definitions/model.StringJsonObject'
      ineid:
        type: string
      origin_server:
        type: string
      poct_reakcii:
        type: integer
      pomocny_zaznam:
        type: string
      posledna_reakcia:
        type: string
      reakcia_na:
        type: string
      removed: {}
      replies:
        items:
          $ref: '#/definitions/apimodel.TimelineItemWithOrigin'
        type: array
      target_user:
        type: string
      text:
        type: string
      timelineid:
        type: string
      timestamp:
        type: string
      typ:
        type: string
      user:
        type: string
      user_meno:
        type: string
      vlastnik:
        type: string
      vlastnik_meno:
        type: string
    type: object
  apimodel.UnauthorizedResponse:
    properties:
      error:
        example: Unauthorized
        type: string
    type: object
  apimodel.ValidateTokenSuccessResponse:
    properties:
      error:
        example: ""
        type: string
      expires:
        example: "1620000000"
        type: string
      success:
        example: true
        type: boolean
    type: object
  apimodel.ValidateTokenUnauthorizedResponse:
    properties:
      error:
        example: Unauthorized
        type: string
      success:
        example: false
        type: boolean
    type: object
  edupage.MessageOptions:
    properties:
      allowReplies:
        type: boolean
      attachments:
        items:
          type: string
        type: array
      important:
        type: boolean
      parents:
        type: boolean
      poll:
        $ref: '#/definitions/edupage.PollOptions'
      repliesToAuthorOnly:
        type: boolean
      text:
        type: string
    type: object
  edupage.PollOption:
    properties:
      id:
        type: string
      text:
        type: string
    type: object
  edupage.PollOptions:
    properties:
      multiple:
        type: boolean
      options:
        items:
          $ref: '#/definitions/edupage.PollOption'
        type: array
    type: object
  icanteen.ICanteenDay:
    properties:
      day:
        type: string
      lunches:
        items:
          $ref: '#/definitions/icanteen.ICanteenLunch'
        type: array
    type: object
  icanteen.ICanteenLunch:
    properties:
      can_order:
        type: boolean
      name:
        type: string
      ordered:
        type: boolean
    type: object
  model.Class:
    properties:
      classroomid:
        type: string
      grade:
        type: string
      id:
        type: string
      name:
        type: string
      short:
        type: string
      teacher2id:
        type: string
      teacherid:
        type: string
    type: object
  model.Classroom:
    properties:
      id:
        type: string
      name:
        type: string
      short:
        type: string
    type: object
  model.Event:
    properties:
      TriedaID:
        type: string
      data:
        type: string
      datum:
        type: string
      mesiac:
        type: string
      moredata: {}
      p_farba:
        type: string
      p_meno:
        type: string
      p_najskor_priemer:
        type: string
      p_pocet_znamok: {}
      p_typ_udalosti: {}
      p_vaha: {}
      planid:
        type: string
      podpisane:
        type: string
      podpisane_rodic:
        type: string
      predmetid:
        type: string
      priemer:
        type: string
      provider:
        type: string
      stav:
        type: string
      studentid:
        type: string
      timestamp:
        type: string
      ucitelid:
        type: string
      udalostID:
        type: string
      znamkaid:
        type: string
    type: object
  model.Note:
    properties:
      PredmetID:
        type: string
      VcelickaID:
        type: string
      p_datum:
        type: string
      p_text:
        type: string
      p_typ:
        type: string
    type: object
  model.Period:
    properties:
      endtime:
        type: string
      id:
        type: string
      name:
        type: string
      short:
        type: string
      starttime:
        type: string
    type: object
  model.Results:
    properties:
      events:
        additionalProperties:
          $ref: '#/definitions/model.Event'
        type: object
      notes:
        additionalProperties:
          $ref: '#/definitions/model.Note'
        type: object
    type: object
  model.StringJsonObject:
    properties:
      value:
        additionalProperties: true
        type: object
    type: object
  model.Subject:
    properties:
      cbhidden:
        type: boolean
      id:
        type: string
      name:
        type: string
      short:
        type: string
    type: object
  model.Teacher:
    properties:
      classroomid:
        type: string
      datefrom:
        type: string
      dateto:
        type: string
      firstname:
        type: string
      gender:
        type: string
      id:
        type: string
      isout:
        type: boolean
      lastname:
        type: string
      short:
        type: string
    type: object
info:
  contact: {}
  description: JWT authorization token
  title: EduPage2 API
  version: "1.0"
paths:
  /api/classroom/{id}:
    get:
      description: Returns the classroom by ID.
      parameters:
      - description: JWT token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Classroom ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Classroom'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/apimodel.UnauthorizedResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/apimodel.InternalErrorResponse'
      security:
      - Bearer: []
      summary: Get the classroom by ID
      tags:
      - DBI
  /api/grades:
    get:
      description: Returns the user's grades.
      parameters:
      - description: JWT token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Year
        in: query
        name: year
        type: string
      - description: Half
        in: query
        name: half
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Results'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/apimodel.UnauthorizedResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/apimodel.InternalErrorResponse'
      security:
      - Bearer: []
      summary: Get the user's grades
      tags:
      - grades
  /api/message:
    post:
      description: Sends a message to a recipient.
      parameters:
      - description: JWT token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Message
        in: body
        name: message
        required: true
        schema:
          $ref: '#/definitions/apimodel.SendMessageRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/apimodel.UnauthorizedResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/apimodel.InternalErrorResponse'
      security:
      - Bearer: []
      summary: Send a message
      tags:
      - messages
  /api/periods:
    get:
      description: Returns the school's periods.
      parameters:
      - description: JWT token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              $ref: '#/definitions/model.Period'
            type: object
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/apimodel.UnauthorizedResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/apimodel.InternalErrorResponse'
      security:
      - Bearer: []
      summary: Get the school's periods
      tags:
      - DBI
  /api/recipients:
    get:
      description: Returns the possible recipients for messages.
      parameters:
      - description: JWT token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/apimodel.Recipient'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/apimodel.UnauthorizedResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/apimodel.InternalErrorResponse'
      security:
      - Bearer: []
      summary: Get recipients
      tags:
      - messages
  /api/subject/{id}:
    get:
      description: Returns the subject by ID.
      parameters:
      - description: JWT token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Subject ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Subject'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/apimodel.UnauthorizedResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/apimodel.InternalErrorResponse'
      security:
      - Bearer: []
      summary: Get the subject by ID
      tags:
      - DBI
  /api/teacher/{id}:
    get:
      description: Returns the teacher by ID.
      parameters:
      - description: JWT token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Teacher ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Teacher'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/apimodel.UnauthorizedResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/apimodel.InternalErrorResponse'
      security:
      - Bearer: []
      summary: Get the teacher by ID
      tags:
      - DBI
  /api/timeline:
    get:
      description: Returns the user's timeline from any date to any other date or
        today.
      parameters:
      - description: JWT token
        in: header
        name: Authorization
        required: true
        type: string
      - example: "2022-01-01T00:00:00Z"
        in: query
        name: from
        type: string
      - default: time.Now()
        example: "2022-01-01T00:00:00Z"
        in: query
        name: to
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/apimodel.Timeline'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/apimodel.UnauthorizedResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/apimodel.InternalErrorResponse'
      security:
      - Bearer: []
      summary: Get the user's timeline
      tags:
      - timeline
  /api/timeline/recent:
    get:
      description: Returns the user's timeline from today to 30 days in the past.
      parameters:
      - description: JWT token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/apimodel.Timeline'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/apimodel.UnauthorizedResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/apimodel.InternalErrorResponse'
      security:
      - Bearer: []
      summary: Get the user's recent timeline
      tags:
      - timeline
  /api/timelineitem/{id}:
    get:
      description: Returns the timeline item by ID.
      parameters:
      - description: JWT token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Timeline item ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/apimodel.TimelineItemWithOrigin'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/apimodel.UnauthorizedResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/apimodel.InternalErrorResponse'
      security:
      - Bearer: []
      summary: Get the timeline item by ID
      tags:
      - timeline
  /api/timetable:
    get:
      description: Returns the user's timetable from date specified to date specified
        or today.
      parameters:
      - description: JWT token
        in: header
        name: Authorization
        required: true
        type: string
      - example: "2022-01-01T00:00:00Z"
        in: query
        name: from
        type: string
      - default: time.Now()
        example: "2022-01-01T00:00:00Z"
        in: query
        name: to
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/apimodel.CompleteTimetable'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/apimodel.UnauthorizedResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/apimodel.InternalErrorResponse'
      security:
      - Bearer: []
      summary: Get the user's  timetable
      tags:
      - timetable
  /api/timetable/recent:
    get:
      description: Returns the user's timetable from before yesterday to 7 days in
        the future.
      parameters:
      - description: JWT token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/apimodel.CompleteTimetable'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/apimodel.UnauthorizedResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/apimodel.InternalErrorResponse'
      security:
      - Bearer: []
      summary: Get the user's recent timetable
      tags:
      - timetable
  /icanteen:
    post:
      consumes:
      - multipart/form-data
      - application/x-www-form-urlencoded
      description: Loads the lunches from iCanteen for the next month.
      parameters:
      - description: Username
        in: formData
        name: username
        required: true
        type: string
      - description: Password
        in: formData
        name: password
        required: true
        type: string
      - description: Server
        in: formData
        name: server
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/icanteen.ICanteenDay'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/apimodel.ICanteenBadRequestResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/apimodel.ICanteenInternalErrorResponse'
      summary: Load lunches from iCanteen
      tags:
      - lunches
  /login:
    post:
      consumes:
      - multipart/form-data
      - application/x-www-form-urlencoded
      description: Logs in to your Edupage account using the provided credentials.
      parameters:
      - description: Username
        in: formData
        name: username
        required: true
        type: string
      - description: Password
        in: formData
        name: password
        required: true
        type: string
      - description: Server
        in: formData
        name: server
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/apimodel.LoginSuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/apimodel.LoginBadRequestResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/apimodel.LoginUnauthorizedResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/apimodel.LoginInternalErrorResponse'
      summary: Login to your Edupage account
      tags:
      - auth
  /qrlogin:
    get:
      description: Logs in using a QR code. This route uses Server-Sent Events (SSE).
      responses: {}
      summary: Log in using a QR code
      tags:
      - auth
  /qrlogin/:code:
    post:
      description: Finishes QR login by sending the login data to the client that
        initiated the SSE channel.
      parameters:
      - description: Code
        in: path
        name: code
        required: true
        type: string
      - description: Username
        in: formData
        name: username
        required: true
        type: string
      - description: Password
        in: formData
        name: password
        required: true
        type: string
      - description: Endpoint
        in: formData
        name: endpoint
        required: true
        type: string
      - description: Server
        in: formData
        name: server
        required: true
        type: string
      responses: {}
      summary: Finish QR login
      tags:
      - auth
  /validate-token:
    get:
      description: Validates your token and returns a 200 OK if it's valid.
      parameters:
      - description: JWT token
        in: header
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/apimodel.ValidateTokenSuccessResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/apimodel.ValidateTokenUnauthorizedResponse'
      summary: Validate your token
      tags:
      - auth
swagger: "2.0"
