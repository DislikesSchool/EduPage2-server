# General server configuration
server:
  # The host address to bind to (do not change this unless you know what you are doing)
  host: "0.0.0.0"
  # The port to bind to
  port: "8080"
  # The mode to run the server in (either "development" or "production")
  mode: "production"

# School configuration
schools:
  # Whitelisted schools (users will only be allowed to login if they are a member of this school)
  whitelist:
    - "schoolname" # This is your school's unique name (https://schoolname.edupage.org)
  # Whether to use the whitelist as a blacklist instead
  blacklist: false # Set this to true with a empty whitelist to allow users from any school

# Redis caching configuration
redis:
  # Whether to enable Redis caching
  enabled: false
  # The Redis server address
  address: "localhost:6379"
  # The Redis server username
  username: ""
  # The Redis server password
  password: ""
  # The Redis database to use
  database: 0
  # The time-to-live for cached data (in seconds)
  ttl:
    timeline: 300 # 5 minutes
    timetable: 21600 # 6 hours
    results: 86400 # 1 day
    DBI: 604800 # 1 week

database:
  # Whether to enable data storage (users will have to opt-in)
  enabled: false
  # The database driver (one of: 'mysql', 'postgres', 'sqlite', 'sqlserver')
  driver: sqlite
  # DSN (find the correct format for your driver here: https://gorm.io/docs/connecting_to_the_database.html)
  dsn: data.db

encryption:
  # Whether to enable encryption
  enabled: false
  # The encryption key (16, 24, or 32 bytes, generated using a secure random value, use a command like openssl rand -base64 32)
  key: "YourDefaultEncryptionKey"

meilisearch:
  # Whether to enable MeiliSearch integration
  enabled: false
  # The MeiliSearch server address
  host: "http://localhost:7700"
  # The MeiliSearch server API key
  api_key: ""
  # Config for message search
  messages:
    # The MeiliSearch index name
    index_name: "edupage2_messages"
    # The MeiliSearch primary key
    primary_key: "id"

# JWT configuration
jwt:
  # The secret key to use for signing JWT tokens (change this to a secure random value)
  secret: "YourDefaultSecretKey"
